# package: baselayout

pkgname=baselayout
pkgver=0.1
pkgdesc="Base root filesystem layout for DockerVM"
url="https://github.com/5haman/dockervm"
source="pkgsrc"

_builddir="$srcdir/$pkgname-$pkgver"
_mydir="$workdir/$pkgname"
_buildflags=""

download() {
    cd "$srcdir"
    cp -Ra "$workdir/$pkgname/$source" "$_builddir"
}

prepare() {
    cd "$_builddir"

    $_mydir/mkinitfs -b "$_builddir" -f "$_builddir/etc/fstab" -F "initrd" \
                     -t "$_builddir" -k -o /dev/null
                     
    # install busybox
    apk --initdb --no-cache --root="$_builddir" --allow-untrusted add busybox-static
    return
    chroot "$_builddir" sh -c \
        "/bin/busybox.static mv /bin/busybox.static /bin/busybox && /bin/busybox --install -s"
}

build() {
    cd "$_builddir"
    return
    chroot "$_builddir" sh -c \
        "passwd root -d 'toor';
        addgroup -S docker;
        addgroup -S dnsmasq;
        adduser -S -D -H -h /dev/null -s /sbin/nologin -G  docker docker;
        adduser -S -D -H -h /dev/null -s /sbin/nologin -G  dnsmasq dnsmasq;
        ln -s /etc/s6 /etc/s6-rc;
        rm -rf /var/run;
        ln -s /run /var/run"
    
    #install -m0664 -o root -g utmp /dev/null "$_builddir/run/utmp"
    #install -m0664 -o root -g utmp /dev/null "$_builddir/var/log/wtmp"
    #install -m0600 -o root -g utmp /dev/null "$_builddir/var/log/lastlog"

}

package() {
    cd "$_builddir"
    if [ ! -f "$pkgdir/$pkgname-$pkgver.$pkgext" ]; then
        # setup os-release
        sed -i "s#{{VERSION}}#${VERSION}#g" "$_builddir/etc/os-release"

        find | cpio -o -H newc | gzip -9 > "$pkgdir/$pkgname-$pkgver.$pkgext"
    fi
}
