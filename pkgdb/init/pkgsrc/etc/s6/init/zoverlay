#!/bin/sh

zcompr="lzo"
newroot="/newroot"
root_ro="/mnt/lower0"
root_rw="/mnt/overlay"

init_zoverlay() {
    mkdir -p "$newroot" "$root_rw/root" "$root_rw/work"
    mkdir -p "$newroot/$root_rw/root" "$newroot/$root_rw/work"

    mount -o remount,ro "$root_ro" "$root_ro"
    mount -t overlay -o lowerdir=$root_ro:/mnt/lower1,upperdir=$root_rw/root,workdir=$root_rw/work overlay "$newroot"
    
    cat /proc/mounts | while read DEV DIR TYPE OPTS ; do
        if [ "$DIR" != "/" -a "$DIR" != "$newroot" -a -d "$DIR" ]; then
            mkdir -p "$newroot/$DIR"
            mount -o move $DIR "$newroot/$DIR"
        fi
    done
}

init_zram() {
    echo $((128*1024*1024)) > /sys/block/zram1/disksize
    echo $((512*1024*1024)) > /sys/block/zram2/disksize
  
    mkfs.ext2 -q /dev/zram1
    mkfs.ext2 -q /dev/zram2
    mount -t ext2 -o noatime /dev/zram1 "$root_ro"
    mount -t ext2 -o noatime /dev/zram2 "$root_rw"

    mkdir -p "$root_ro/dev" "$root_ro/proc" "$root_ro/sys" "$root_ro/tmp" "$root_ro/run"
    (find / | grep -vE "^/dev|^/proc|^/sys|^/newroot|^/run|^/tmp|^/mnt|^/$" | cpio -d -u -m -p "$root_ro") &>/dev/null
}

init_zswap() {
    echo $((1024*1024*1024)) > /sys/block/zram0/disksize
}

# main script
cd /       
mkdir -p "$newroot" "$root_ro" "$root_rw"

modprobe -q zram num_devices=4

init_zswap
init_zram
init_zoverlay
sync

exit 0
