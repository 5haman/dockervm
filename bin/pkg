#!/usr/bin/env bash

_VERSION=0.1

set -e
[ -n "$DEBUG" ] && set -x

threads=$(cat /proc/cpuinfo | grep processor | wc -l)
pkgext=pkg
srcdir="$SRC_DIR/.build"
workdir="$SRC_DIR/pkg"
pkgdir="$SRC_DIR/.cache"

build_spk() {
    source "$workdir/$1/pkgbuild"
    if [ ! -f "$pkgdir/$pkgname-$pkgver.$pkgext" ]; then
        log " => Building '$pkgname-$pkgver.$pkgext'"
        rm -rf "$srcdir/$pkgname-$pkgver"
        download
        prepare
        build
        package
    else
        log " => '$pkgname-$pkgver.$pkgext' already exists, skipping"
    fi
}

build_all() {
    mkdir -p "$pkgdir"

    for spk in "$@"; do
        build_spk $spk
    done
}

install_spk() {
    source "$workdir/$1/pkgbuild"
    if [ ! -f "$pkgdir/$pkgname-$pkgver.$pkgext" ]; then
        log " => '$pkgname-$pkgver.$pkgext' not found, trying to build now"
        build_spk $1
    fi

    log " => Installing '$pkgname-$pkgver.$pkgext'"
    gunzip -cf "$pkgdir/$pkgname-$pkgver.$pkgext" | cpio -i -d -f -D /
}

install_all() {
    for spk in "$@"; do
        install_spk $spk
    done
}

log() {
    echo $'\e['"1;31m$(date "+%Y-%m-%d %H:%M:%S") [$(basename $0)] ${@}"$'\e[0m'
}

usage() {
    printf "Usage: $(basename "$0") [-v|-h] command [<package> ...]

Options:
  --version, -v - Print the version and exit
  --help, -h    - Display CLI help (this output)

Commands:
  build, b        Build static package(s)
  install, i      Install static package(s)
"
}

case "$1" in
    --version|-v)         echo "$(basename $0): $_VERSION";;
    --help|-h|help)       usage;;
    install|i*)           shift; install_all "$@";;
    build|b*)             shift; build_all "$@";;
    *)                    usage; exit 1;;
esac
