# pkg:  

pkgname=
pkgver=
pkgdesc=""
url=""
source="$pkgname-$pkgver.tar.gz"

_builddir="$srcdir/$pkgname-$pkgver"
_buildflags="--disable-shared \
             --enable-static"

download() {
    cd "$srcdir"
    if [ ! -d "$_builddir" ]; then
        curl -sSL "$source" | tar xz -C "$srcdir"
    fi
}

prepare() {
    cd "$_builddir"
    local i
    for i in $source; do
        case $i in
                *.tar.gz) curl -sSL "$i" | tar xz -C "$srcdir";;
                *.tar.bz2) curl -sSL "$i" | tar xj -C "$srcdir";;
                *.tar.xz) curl -sSL "$i" | tar xJ -C "$srcdir";;
                *.patch) cp "$workdir/$pkgname/$i" "$_builddir/$i";;
        esac
    done
}

build() {
    cd "$_builddir"

    #export CFLAGS="-Os -D_GNU_SOURCE"
    #export LDFLAGS='-s'
    ./configure $_buildflags

    make -j"${threads}" CFLAGS='-Os -pipe' LDFLAGS='-s -static'
}

package() {
    cd "$_builddir"
    tmpdir=$(mktemp -d)
    make -j1 install DESTDIR="$tmpdir" || return 1

    cd $tmpdir
    # strip binary files
    sh -c "find -type f | xargs strip --strip-all &>/dev/null; exit 0"

    find | cpio -o -H newc | gzip -9 > "$pkgdir/$pkgname-$pkgver.$pkgext"
    rm -rf $tmpdir
}
